{
  "Description" : "D2SI - AWS CloudFormation Template: Shared resources for demo app",

  "Parameters" : {
    "DBInstanceType" : { "Description" : "DB instance type for database", "Type" : "String", "Default" : "db.t2.micro" },
    "DBName" : { "Description" : "Database Name", "Type" : "String" },
    "DBSize" : { "Description" : "Database size", "Type" : "Number" },
    "DBUser" : { "Description" : "Database master user", "Type" : "String" },
    "DBPassword" : { "Description" : "Database master password", "Type" : "String","NoEcho":"True" },
    
    "ASGCapacityDesired" : { "Description" : "The desired size of the Auto Scaling group", "Type" : "Number", "Default" : "2" },
    "ASGCapacityMin" : { "Description" : "The minimum size of the Auto Scaling group", "Type" : "Number", "Default" : "2" },
    "ASGCapacityMax" : { "Description" : "The maximum size of the Auto Scaling group", "Type" : "Number", "Default" : "4" },
    "AppAMI" : { "Description" : "AMI to use for application servers", "Type" : "String" },
    "AppKeyName" : { "Description" : "Key to use for application servers", "Type" : "String" },
    "AppInstanceType" : { "Description" : "Instance type to use for application servers", "Type" : "String" },

    "VpcId" : { "Description" : "VPC to use", "Type" : "String" },
    "AZ1" : { "Description" : "First AZ to use", "Type" : "String" },
    "AZ2" : { "Description" : "Second AZ to use", "Type" : "String" },
    "PublicSubnet1" : { "Description" : "First public subnet", "Type" : "String" },
    "PublicSubnet2" : { "Description" : "Second public subnet", "Type" : "String" },
    "PrivateSubnet1" : { "Description" : "First database subnet", "Type" : "String" },
    "PrivateSubnet2" : { "Description" : "Second database subnet", "Type" : "String" },

    "SGstdAccess" : { "Description" : "Standard security group for instances to allow access from bastion", "Type" : "String" }
  },

  "Resources" : {

    "SGdatabase" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Allow access to the database from web frontends",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "3306", "ToPort" : "3306", "SourceSecurityGroupId" : { "Ref" : "SGwebservers"}}
        ],
        "Tags": [ { "Key" : "Name", "Value": "Data_access" }] 
      }
    },

    "SGwebservers" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Allow access to webfrontends from the ELB",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" : { "Ref" : "SGelb"}}
        ],
        "Tags": [ { "Key" : "Name", "Value": "Web_servers" }] 
      }
    },

    "SGelb" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Allow full access to the ELB",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags": [ { "Key" : "Name", "Value": "ELB" }] 
      }
    },

    "WebserverRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [ {
            "Effect": "Allow",
            "Principal": {
              "Service": [ "ec2.amazonaws.com" ]
            },
            "Action": [ "sts:AssumeRole" ]
          } ]
        }
      }
    },


    "WebRolePolicies": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "root",
        "PolicyDocument": {
          "Version" : "2012-10-17",
          "Statement": [
            { "Effect": "Allow", "Action": [ "dynamodb:*", "cloudwatch:*" ], "Resource": "*" }
          ]
        },
        "Roles": [ { "Ref": "WebserverRole" } ]
      }
    },


    "WebserverInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "WebserverRole" } ]
      }
    },


    "SubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "Demo Subnet Group",
        "SubnetIds" : [ { "Ref" : "PrivateSubnet1" }, { "Ref" : "PrivateSubnet2" } ]
      }
    },

    "DemoDB" : {
      "Type" : "AWS::RDS::DBInstance",
      "Properties" : {
        "DBName" : { "Ref" : "DBName" },
        "AllocatedStorage" : { "Ref" : "DBSize" },
        "DBInstanceClass" : { "Ref" : "DBInstanceType" },
        "DBSubnetGroupName" : { "Ref" : "SubnetGroup" },
        "VPCSecurityGroups" : [{ "Ref" : "SGdatabase" }],
        "Engine" : "MySQL",
        "EngineVersion" : "5.6",
        "MasterUsername" : { "Ref" : "DBUser" },
        "MasterUserPassword" : { "Ref" : "DBPassword" }
      },
      "DeletionPolicy" : "Delete"
    },

    "DemoDDB" : {
      "Type" : "AWS::DynamoDB::Table",
      "Properties" : {
        "AttributeDefinitions" : [
          {
            "AttributeName" : "application",
            "AttributeType" : "S"   
          },
          {
            "AttributeName" : "parameter",
            "AttributeType" : "S"
          }
        ],
        "KeySchema" : [
          {
            "AttributeName" : "application",
            "KeyType" : "HASH"
          },
          {
            "AttributeName" : "parameter",
            "KeyType" : "RANGE"
          }
        ],
        "ProvisionedThroughput" : {
          "ReadCapacityUnits" : "5",
          "WriteCapacityUnits" : "5"
        },
        "TableName" : "demoDDB"
      }
    },

    "ServerASG" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "AvailabilityZones" : [{"Ref" : "AZ1"}, {"Ref" : "AZ2"}],
        "Tags": [ { "Key" : "Name", "Value": "DemoASG", "PropagateAtLaunch" : "true" } ],
        "MinSize" : { "Ref" : "ASGCapacityMin" },
        "MaxSize" : { "Ref" : "ASGCapacityMax" },
        "DesiredCapacity" : { "Ref" : "ASGCapacityDesired" },
        "LoadBalancerNames" : [ { "Ref" : "ElasticLoadBalancer" } ],
        "VPCZoneIdentifier" : [ { "Ref" : "PrivateSubnet1" }, { "Ref" : "PrivateSubnet2" } ],
        "HealthCheckType" : "EC2",
        "HealthCheckGracePeriod" : "600"
      },
      "UpdatePolicy" : {
        "AutoScalingRollingUpdate" : {
          "MaxBatchSize" : "2",
          "MinInstancesInService" : "1",
          "PauseTime" : "0"
        }
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Properties" : {
        "AssociatePublicIpAddress" : "False",
        "ImageId" : { "Ref" : "AppAMI" },
        "KeyName" : { "Ref" : "AppKeyName" },
        "InstanceType" : { "Ref" : "AppInstanceType" }, 
        "IamInstanceProfile" : { "Ref" : "WebserverInstanceProfile" },
        "SecurityGroups" : [ { "Ref" : "SGwebservers" } ,{ "Ref" : "SGstdAccess" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash",
                "rm /var/www/html/application.properties",
                {"Fn::Join": ["", [ "echo dbuser = ", { "Ref" : "DBUser"} ," >> /var/www/html/application.properties" ]]},
                {"Fn::Join": ["", [ "echo dbhost = ", { "Fn::GetAtt" : [ "DemoDB", "Endpoint.Address"] } ," >> /var/www/html/application.properties" ]]},
                {"Fn::Join": ["", [ "echo dbpwd = ", { "Ref" : "DBPassword"} ," >> /var/www/html/application.properties" ]]},
                {"Fn::Join": ["", [ "echo database = ", { "Ref" : "DBName"} ," >> /var/www/html/application.properties" ]]},
                {"Fn::Join": ["", [ "echo ddbtable = ", { "Ref" : "DemoDDB"} ," >> /var/www/html/application.properties" ]]},
                {"Fn::Join": ["", [ "echo region = ", { "Ref" : "AWS::Region"} ," >> /var/www/html/application.properties" ]]}
              ]
            ]  
          }
        }
      }
    },

    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "Listeners" : [
            { "LoadBalancerPort" : "80",
              "InstancePort" : "80",
              "Protocol" : "HTTP"
            }
        ],
        "HealthCheck" : {
          "Target" : "HTTP:80/index.php",
          "HealthyThreshold" : "6",
          "UnhealthyThreshold" : "3",
          "Interval" : "10",
          "Timeout" : "5"
        },
        "Subnets" : [ { "Ref" : "PublicSubnet1" }, { "Ref" : "PublicSubnet2" } ],
        "Scheme" : "internet-facing",
        "CrossZone" : "True",
        "SecurityGroups" : [ { "Ref" : "SGelb" } ]
	    }
    }
  },


  "Outputs" : {
    "ELBName" : { "Description" : "Address of the load-balancer", "Value" :  { "Fn::GetAtt" : [ "ElasticLoadBalancer", "DNSName" ]} }
  }
}
